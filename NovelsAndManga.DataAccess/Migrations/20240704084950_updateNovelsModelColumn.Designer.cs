// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NovelsManga.DataAccess.Data;

#nullable disable

namespace NovelsManga.DataAccess.Migrations
{
    [DbContext(typeof(MangaNovelDatabase))]
    [Migration("20240704084950_updateNovelsModelColumn")]
    partial class updateNovelsModelColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NovelsManga.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenreId");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("NovelsManga.Models.NovelsGenre", b =>
                {
                    b.Property<int>("NovelsId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("NovelsId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("novelsGenres");
                });

            modelBuilder.Entity("NovelsManga.Models.NovelsModels", b =>
                {
                    b.Property<int>("NovelsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NovelsId"));

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NovelsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NovelsSummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NovelsType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seriesAuthor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seriesStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NovelsId");

                    b.ToTable("NovelsPage");
                });

            modelBuilder.Entity("NovelsManga.Models.NovelsGenre", b =>
                {
                    b.HasOne("NovelsManga.Models.Genre", "Genre")
                        .WithMany("NovelGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovelsManga.Models.NovelsModels", "Novel")
                        .WithMany("NovelGenres")
                        .HasForeignKey("NovelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Novel");
                });

            modelBuilder.Entity("NovelsManga.Models.Genre", b =>
                {
                    b.Navigation("NovelGenres");
                });

            modelBuilder.Entity("NovelsManga.Models.NovelsModels", b =>
                {
                    b.Navigation("NovelGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
